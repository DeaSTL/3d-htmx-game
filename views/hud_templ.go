// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.898
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func styles() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templ.Raw(`
    <style>
    .hud-container {
      position: static;
      z-index: 100;
      left: 0;
      top: 0;
      padding: 100px;
      width: 100%;
      height: 20%;
      transform: translateX(-50vw) translateY(30vh);
      background-color: #1d1d1d;
      border-top: 30px solid lightgrey;
      border-bottom: 30px solid grey;
      border-left: 30px solid lightgrey;
      border-right: 30px solid grey;
      background: url("/public/hud-background.jpg");
      background-size: 12800px 12800px;
    }
    .hud-button:hover {
      background-color: #319734;
      border-top: 30px solid #6fc164;
      border-bottom: 30px solid #6fc164;
      border-left: 30px solid #6fc164;
      border-right: 30px solid #6fc164;
    }
    .hud-button:active {
      background-color: #2a7a2c;
      border-top: 30px solid #3b6736;
      border-bottom: 30px solid #3b6736;
      border-left: 30px solid #3b6736;
      border-right: 30px solid #3b6736;
    }
    .hud-button {
      transition: all 100ms ease-out;
      background-size: 12800px 12800px;
      background-color: gray;
      color: white;
      padding: 70px;
      font-size: 200px;
      border-top: 30px solid #4b4b4b;
      border-bottom: 30px solid #4b4b4b;
      border-left: 30px solid #4b4b4b;
      border-right: 30px solid #4b4b4b;
    }
    </style>
  `).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

func Hud() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var2 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var2 == nil {
			templ_7745c5c3_Var2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = styles().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<div class=\"hud-container\"><button class=\"hud-button\">Test Button\t</button></div>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
