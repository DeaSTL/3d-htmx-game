package views

import (
  "fmt"
  "github.com/deastl/htmx-doom/utils"
  "github.com/deastl/htmx-doom/gameobjects"
)
css plane(
rot utils.Vector3,
trans utils.Vector3,
size utils.Dimension2,
brightness float64,
color string,
){
  transform: {
    templ.SafeCSSProperty(
    fmt.Sprintf(
      `scale3d(1,-1,1) translate3d(%fpx,%fpx,%fpx) rotate3d(0,1,0,%fdeg) `,
      trans.X,
      trans.Y,
      trans.Z,
      rot.Y,
      ))
  };
  transform-style: preserve-3d;
  background-image: url("/public/industrial-wall.jpg");
  background-size: 512px 512px;
  image-rendering: pixelated;
  transform-origin: 0px 0px 0px;
  filter: {
    templ.SafeCSSProperty(
    fmt.Sprintf(
      `brightness(%f%%) drop-shadow(16px 16px 20px %s)`,
      brightness,color,
    ))
    };
  color: red;
  font-size: 30px;
  position: absolute;
  height: {fmt.Sprintf("%fpx", size.Height)};
  width: {fmt.Sprintf("%fpx", size.Width)};
}

css point(position utils.Vector3){
  transform: {
    templ.SafeCSSProperty(
    fmt.Sprintf(
      `scale3d(1,-1,1) translate3d(%fpx,%fpx,%fpx)`,
      position.X,
      position.Y,
      position.Z,
      ))
  };
  transform-style: preserve-3d;
  width: 25px;
  height: 25px;
  border-radius: 25px;
  transform-origin: 0px 0px 0px;
  color: red;
  font-size: 30px;
  position: absolute;
}

templ Plane(wall gameobjects.Wall) {
<div class={plane(
utils.Vector3{X: 0,Y:wall.Rotation.Y,Z:0},
wall.Position,
utils.Dimension2{Height: wall.Height, Width: wall.Width},
wall.Brightness,
wall.Color,
)}>
  {fmt.Sprintf("%+v, %+v",wall.Position.X,wall.Position.Z)}

  //we'll get back to you later....
  //<iframe src="https://example.com" height="1024"></iframe>
  //uncomment for pure chaos
</div>
}
